class Base:
    //que el valor del disco representa su tamaÃ±o
    //el array discos representa el orden de arriba a abajo de los discos

    discos = [4,3,2,1]  [3,1,A] / []   / [1,3]
    pop / push 
    METODOS
    pop()
        self.discos.pop()
    push(d):
        self.discos.push(d)
    terminado():
        SI ESTAN TODOS LOS DISCOS Y ESTAN ORDENADOS.
    top():
        if (len(discos)>0):
            disco_top= discos[len(discos)-1]
        else:
            disco_top=0
        return disco_top
    traspasar(baseDestino):
            #QUITAR EL ORIGEN Y PONERLO EN EL DESTINO 
            d = self.pop()
            baseDestino.push(d)
    puedoTraspasar(baseDestino):
        puedo = False
        if self.top()==0:
            puedo= False
        elif baseDestino.top()==0:
            puedo= True
        elif self.top()<baseDestino.top():
            puedo= True
        return puedo
    finish(self):
        if discos == [4,3,2,1]:
            DEVOLVER true 
        eslse:
            DEVOLVER False 

base1.meta = valor

base1.set_meta(False)
base1.get_meta()

if base1.get_meta() == True:

n=base1.extraer()


PROGRAMA:
    n = int(input("escribe el numero de discos"))

    base1 = Base(False, [4,3])
    base2 = Base(False, [2])
    base3 = Base(True, [1])

    while not base3.terminado():
        if base1.puedoTraspasar(base2):
            base1.traspasa(base2)
        elif base1.traspasar(base3):
            base1.traspasa(base3)
        elfi base2.traspasar(base3):
            base2.traspasa(base3)
        elif base3.traspasar(base2):
            base3.traspasa(base2)
        else:
            COMPROBAR SI FINISH 




        
